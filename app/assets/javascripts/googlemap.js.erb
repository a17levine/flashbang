window.chosenPlace;
window.chosenPlaceName;
window.chosenPlaceAddress;
window.chosenPlaceUrl;

function logPlaceVariablesToConsole(){
  console.log("chosenPlace is", window.chosenPlace);
  console.log("chosenPlaceName is", window.chosenPlaceName);
  console.log("chosenPlaceAddress is", window.chosenPlaceAddress);
  console.log("chosenPlaceUrl is", window.chosenPlaceUrl);
};

function initialize() {
  var mapOptions = {
    center: new google.maps.LatLng(30.286012, -97.73945),
    zoom: 13
  };
  var map = new google.maps.Map(document.getElementById('map-canvas'),
    mapOptions);

  var input = /** @type {HTMLInputElement} */(
      document.getElementById('pac-input'));

  var types = document.getElementById('type-selector');
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);

  var infowindow = new google.maps.InfoWindow();
  var marker = new google.maps.Marker({
    draggable:true,
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });

  google.maps.event.addListener(autocomplete, 'place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();
    window.chosenPlace = place;
    window.chosenPlaceName = window.chosenPlace.name;
    window.chosenPlaceUrl = "http://maps.google.com/?q=" + encodeURI(chosenPlace.formatted_address);
    console.log("place is", place);
    if (!place.geometry) {
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
    }
    marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
    }));
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);

    // This code runs when you initially pick an address from Google's Autocomplete

    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
      window.chosenPlaceAddress = place.formatted_address;
      logPlaceVariablesToConsole();
    }

    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
    infowindow.open(map, marker);
  });

  // This code runs after you drag a pin to a custom location

  google.maps.event.addListener(
    marker,
    'dragend',
    function() {
      window.chosenPlace = marker.getPosition();
      window.chosenPlaceName = "Custom Pin";
      window.chosenPlaceUrl = "http://maps.google.com/?q=" + chosenPlace.toUrlValue();
      window.chosenPlaceAddress = chosenPlace.toString();
      logPlaceVariablesToConsole();
      marker.icon.url = "http://maps.gstatic.com/mapfiles/place_api/icons/geocode-71.png";
      infowindow.setContent("<div><strong>Custom Location</strong>");
    }
  );
}

google.maps.event.addDomListener(window, 'load', initialize);